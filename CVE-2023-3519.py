import requests
from datetime import datetime, timedelta
# https://github.com/mr-r3b00t/CVE-2023-3519 
# A tool to find netscalers and look at the last modified date on the HTTP header response
# for NetScaler (Citrix ADC) CVE-2023-3519

target = "https://172.26.232.149"
user_agent = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.3"

# Define a function to ignore SSL certificate validation
def trust_all_certs_policy():
    import ssl
    ssl._create_default_https_context = ssl._create_default_https_context = ssl._create_unverified_context

trust_all_certs_policy()

try:
    # Make the HTTP request and get the response
    response = requests.get(target, headers={"User-Agent": user_agent}, verify=False)

    found = "citrix" in response.text.lower()

    if found:
        print("CITRIX FOUND")

        # Print the target URL and Last-Modified header
        print(target)
        print(response.headers.get("Last-Modified"))

        # Check the Last-Modified date
        if response.headers.get("Last-Modified"):
            target_date = datetime.strptime(response.headers["Last-Modified"], "%a, %d %b %Y %H:%M:%S %Z")
            current_date = datetime.now()

            # Calculate the age of the target
            age = (current_date - target_date).days
            print(f"AGE: {age}")

            # Check if the date is older than 15 days
            if age >= 15:
                print("DANGER OLD DATESTAMP DETECTED")
            else:
                print("MIGHT BE OK!")
        else:
            print("Error enumerating")
    else:
        print("NOT a CITRIX Server")
except Exception as e:
    print("Error:", e)
